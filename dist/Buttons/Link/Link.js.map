{"version":3,"sources":["../../../src/Buttons/Link/Link.js"],"names":["Link","muiTheme","props","theme","sourceMuiProps","muiProps","sourceQflProps","qflProps","componentName","targetObj","href","linkComponent","linkStyle","labelStyle","label","to","propTypes","object","string","childContextTypes","PropTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AACA;;;;AACA;;;;AAEA;;AAEA;;;;AAEA;;;IAGMA,I;;;AAoCF,oBAAc;AAAA;AAAA;AAEb;;;;0CAEiB;AACd,mBAAO;AACHC,0BAAU,yBAAY,KAAKC,KAAL,CAAWC,KAAvB;AADP,aAAP;AAGH;;;iCAEQ;AAAA,8BAC0B,8BAAW;AACtCA,uBAAO,KAAKD,KAAL,CAAWC,KADoB;AAEtCC,gCAAgB,KAAKF,KAAL,CAAWG,QAFW;AAGtCC,gCAAgB,KAAKJ,KAAL,CAAWK,QAHW;AAItCC,+BAAe;AAJuB,aAAX,CAD1B;AAAA,gBACGH,QADH,eACGA,QADH;AAAA,gBACaE,QADb,eACaA,QADb;;AAQL,gBAAME,YAAY,EAAEC,MAAM,KAAKR,KAAL,CAAWQ,IAAnB,EAAlB;;AAEA,gBAAIC,gBACA;AAAA;AAAA,yCAAG,OAAO,sBAAO,qBAAMN,SAASO,SAAf,EAA0B,KAA1B,CAAP,EAAyC,KAAKV,KAAL,CAAWU,SAApD,CAAV,IAA8EH,SAA9E;AACI;AAAA;AAAA,sBAAM,OAAO,sBAAO,qBAAMJ,SAASQ,UAAf,EAA2B,KAA3B,CAAP,EAA0C,KAAKX,KAAL,CAAWW,UAArD,CAAb;AACK,yBAAKX,KAAL,CAAWY;AADhB;AADJ,aADJ;;AAQA,gBAAI,KAAKZ,KAAL,CAAWa,EAAf,EAAmB;AACf,uBAAON,UAAUC,IAAjB;AACAD,0BAAUM,EAAV,GAAe,KAAKb,KAAL,CAAWa,EAA1B;AACAJ,gCACI;AAAA;AAAA,6CAAW,OAAO,sBAAO,qBAAMN,SAASO,SAAf,EAA0B,KAA1B,CAAP,EAAyC,KAAKV,KAAL,CAAWU,SAApD,CAAlB,IAAsFH,SAAtF;AACI;AAAA;AAAA,0BAAM,OAAO,sBAAO,qBAAMJ,SAASQ,UAAf,EAA2B,KAA3B,CAAP,EAA0C,KAAKX,KAAL,CAAWW,UAArD,CAAb;AACK,6BAAKX,KAAL,CAAWY;AADhB;AADJ,iBADJ;AAOH;;AAED,mBACI;AAAA;AAASP,wBAAT;AACKI;AADL,aADJ;AAKH;;;4BAhFMK,S,GAAY;AACf;;;AAGAb,WAAO,iBAAUc,MAJF;AAKf;;;AAGAZ,cAAU,iBAAUY,MARL;AASf;;;AAGAV,cAAU,iBAAUU,MAZL;AAaf;;;AAGAL,eAAW,iBAAUK,MAhBN;AAiBf;;;AAGAJ,gBAAY,iBAAUI,MApBP;AAqBf;;;AAGAF,QAAI,iBAAUG,MAxBC;AAyBf;;;AAGAR,UAAM,iBAAUQ,MA5BD;AA6Bf;;;AAGAJ,WAAO,iBAAUI;AAhCF,C;;;AAmFvBlB,KAAKmB,iBAAL,GAAyB;AACrBlB,cAAU,gBAAMmB,SAAN,CAAgBH;AADL,CAAzB;;AAIAjB,KAAKqB,YAAL,GAAoB;AAChBlB,WAAO,SADS;AAEhBI,cAAU,EAFM;AAGhBF,cAAU,EAHM;AAIhBK,UAAM,GAJU;AAKhBK,QAAI,IALY;AAMhBD,WAAO,EANS;AAOhBF,eAAW,EAPK;AAQhBC,gBAAY;AARI,CAApB;;kBAWeb,I","file":"Link.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\n\nimport { IndexLink } from 'react-router';\nimport clone from 'clone';\nimport extend from 'extend';\n\nimport { buildTheme } from '../../themeBuilder';\n\nimport { getMuiTheme } from 'material-ui/styles';\n\n/**\n * Material UI based link\n */\nclass Link extends Component {\n    static propTypes = {\n        /**\n         * Applies a given MaterialUI theme.\n         */\n        theme: PropTypes.object,\n        /**\n         * Forwarded to MaterialUI component.\n         */\n        muiProps: PropTypes.object,\n        /**\n         * Forwarded to wrapper component.\n         */\n        qflProps: PropTypes.object,\n        /**\n         * style for the anchor element.\n         */\n        linkStyle: PropTypes.object,\n        /**\n         * style for the embedded span element.\n         */\n        labelStyle: PropTypes.object,\n        /**\n         * url target with IndexLink behaviour\n         */\n        to: PropTypes.string,\n        /**\n         * url target with default behaviour\n         */\n        href: PropTypes.string,\n        /**\n         * link text\n         */\n        label: PropTypes.string\n    };\n\n    constructor() {\n        super();\n    }\n\n    getChildContext() {\n        return {\n            muiTheme: getMuiTheme(this.props.theme)\n        };\n    }\n\n    render() {\n        const { muiProps, qflProps } = buildTheme({\n            theme: this.props.theme,\n            sourceMuiProps: this.props.muiProps,\n            sourceQflProps: this.props.qflProps,\n            componentName: 'Link'\n        });\n\n        const targetObj = { href: this.props.href };\n\n        let linkComponent = (\n            <a style={extend(clone(muiProps.linkStyle, false), this.props.linkStyle)} {...targetObj}>\n                <span style={extend(clone(muiProps.labelStyle, false), this.props.labelStyle)}>\n                    {this.props.label}\n                </span>\n            </a>\n        );\n\n        if (this.props.to) {\n            delete targetObj.href;\n            targetObj.to = this.props.to;\n            linkComponent = (\n                <IndexLink style={extend(clone(muiProps.linkStyle, false), this.props.linkStyle)} {...targetObj}>\n                    <span style={extend(clone(muiProps.labelStyle, false), this.props.labelStyle)}>\n                        {this.props.label}\n                    </span>\n                </IndexLink>\n            );\n        }\n\n        return (\n            <div {...qflProps}>\n                {linkComponent}\n            </div>\n        );\n    }\n}\n\nLink.childContextTypes = {\n    muiTheme: React.PropTypes.object\n};\n\nLink.defaultProps = {\n    theme: 'Default',\n    qflProps: {},\n    muiProps: {},\n    href: '#',\n    to: null,\n    label: '',\n    linkStyle: {},\n    labelStyle: {}\n};\n\nexport default Link;\n"]}