{"version":3,"sources":["../../../src/Tables/Table/Table.js"],"names":["getSelectable","theme","muiProps","qflProps","SelectableCheckBox","props","state","currentValue","value","e","oldValue","newValue","setState","onChange","toastrCSS","require","reactBootstrapTableCSS","muiPropsObj","disabled","indeterminate","checkedIcon","checked","rowIndex","style","handleChange","propTypes","type","string","bool","any","func","selectRowProp","Table","selectedRows","muiTheme","setTimeout","window","dispatchEvent","Event","elementContainer","refs","reactBootstrapTable","table","children","scrollable","length","scroll","scrollTop","innerHeight","scrollHeight","scrolltrigger","rbtProps","options","onLoadMore","handleRowSelectAll","cleanSelected","row","isSelected","event","currentSelectedRows","id","onSelectedRowsChanged","rows","r","dataSource","data","sourceRbtProps","sourceQflProps","componentName","stylingProps","containerStyle","Object","assign","tableStyle","bodyStyle","headerStyle","mode","clickToSelect","onSelect","handleRowSelect","onSelectAll","customComponent","selectorTheme","selectorMuiProps","selectorQflProps","thcSchema","map","thcItem","name","thcProps","object","array","arrayOf","shape","isRequired","childContextTypes","defaultProps"],"mappings":"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","file":"Table.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { BootstrapTable, TableHeaderColumn } from 'react-bootstrap-table';\nimport IndeterminateCheckbox from 'material-ui/svg-icons/content/remove';\nimport $ from 'jquery';\n\nimport CheckBox from '../../InputForms/CheckBox/CheckBox';\n\nimport { buildTheme } from '../../themeBuilder';\n\nimport { getMuiTheme } from 'material-ui/styles';\n\nconst getSelectable = (theme, muiProps, qflProps) => {\n  class SelectableCheckBox extends Component {\n    static propTypes = {\n      type: PropTypes.string,\n      checked: PropTypes.bool,\n      disabled: PropTypes.bool,\n      rowIndex: PropTypes.any,\n      indeterminate: PropTypes.bool,\n      onChange: PropTypes.func,\n      selectRowProp: PropTypes.bool\n    };\n\n    constructor(props) {\n      super(props);\n\n      this.state = {\n        currentValue: props.value\n      }\n    }\n\n    handleChange(e, oldValue, newValue) {\n      this.setState({\n        currentValue: newValue\n      });\n      if (this.props.onChange) {\n        this.props.onChange(e);\n      }\n    }\n\n    render() {\n      const toastrCSS = require('react-bootstrap-table/css/toastr.css');\n      const reactBootstrapTableCSS = require('react-bootstrap-table/css/react-bootstrap-table.css');\n\n      const muiPropsObj = {\n        disabled: this.props.disabled,\n        ...muiProps\n      };\n\n      if (this.props.indeterminate) {\n        muiPropsObj.checkedIcon = <IndeterminateCheckbox />;\n      }\n\n      return <CheckBox\n        value={this.props.checked}\n        key={this.props.rowIndex}\n        theme={theme}\n        checked={this.props.checked}\n        muiProps={muiPropsObj}\n        qflProps={{\n          style: {},\n          ...qflProps\n        }}\n        onChange={(e, oldValue, newValue) => {\n          if (oldValue !== newValue) {\n            this.handleChange(e, oldValue, newValue);\n          }\n        }}\n      />\n    }\n  }\n\n  return SelectableCheckBox;\n};\n\n\n/**\n * Material UI based boostrap table\n */\nclass Table extends Component {\n  static propTypes = {\n    /**\n     * Applies a given MaterialUI theme.\n     */\n    theme: PropTypes.object,\n    selectorTheme: PropTypes.object,\n    selectorMuiProps: PropTypes.object,\n    selectorQflProps: PropTypes.object,\n    /**\n     * Array of elements to show in the table.\n     */\n    dataSource: PropTypes.array,\n    /**\n     * Props forwarded to Bootstraptable.\n     */\n    rbtProps: PropTypes.object,\n    /**\n     * Schema describing properties for rendering TableHeaderColumns.\n     */\n    thcSchema: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      thcProps: PropTypes.object\n    })).isRequired,\n    stylingProps: PropTypes.object,\n    onSelectedRowsChanged: PropTypes.func\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      selectedRows: {}\n    };\n  }\n\n  getChildContext() {\n    return {\n      muiTheme: getMuiTheme(this.props.theme)\n    };\n  }\n\n  componentDidMount() {\n    //Hack for render table in Grid\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 0);\n    const elementContainer = this.refs.reactBootstrapTable && this.refs.reactBootstrapTable.refs && this.refs.reactBootstrapTable.refs.table || null;\n    if (elementContainer && $(elementContainer).children('.react-bs-container-body')) {\n      const scrollable = $(elementContainer).children('.react-bs-container-body');\n      if (scrollable && scrollable.length === 1) {\n        scrollable.scroll(() => {\n          const scrollTop = scrollable.scrollTop(), innerHeight = scrollable.innerHeight(),\n            scrollHeight = scrollable[0].scrollHeight;\n          const scrolltrigger = 0.75;\n\n          if ((scrollTop + innerHeight >= scrollHeight - ((1 - scrolltrigger) * scrollHeight)) && this.props.rbtProps && this.props.rbtProps.options && this.props.rbtProps.options.onLoadMore) {\n            this.props.rbtProps.options.onLoadMore();\n          }\n        });\n      }\n    }\n\n  }\n\n  cleanSelected() {\n    this.handleRowSelectAll(false);\n    this.refs.reactBootstrapTable.cleanSelected();\n  }\n\n  handleRowSelect(row, isSelected, event) {\n    const currentSelectedRows = this.state.selectedRows;\n    if (isSelected) {\n      currentSelectedRows[row.id] = row;\n    } else {\n      delete currentSelectedRows[row.id];\n    }\n\n    this.setState({\n      selectedRows: currentSelectedRows\n    });\n\n    if (this.props.onSelectedRowsChanged) {\n      this.props.onSelectedRowsChanged(currentSelectedRows);\n    }\n  }\n\n  handleRowSelectAll(isSelected, rows) {\n    const currentSelectedRows = {};\n    if (rows && isSelected) {\n      for (let r = 0; r < rows.length; r++) {\n        currentSelectedRows[rows[r].id] = rows[r];\n      }\n    }\n    this.setState({\n      selectedRows: currentSelectedRows\n    });\n\n    if (this.props.onSelectedRowsChanged) {\n      this.props.onSelectedRowsChanged(currentSelectedRows);\n    }\n  }\n\n  render() {\n    const dataSource = (this.props.dataSource || this.props.rbtProps.data);\n    delete this.props.rbtProps.data;\n\n    const { qflProps, rbtProps } = buildTheme({\n      theme: this.props.theme,\n      sourceRbtProps: this.props.rbtProps,\n      sourceQflProps: this.props.qflProps,\n      componentName: 'Table'\n    });\n\n    const { stylingProps } = this.props;\n    if (rbtProps && rbtProps.containerStyle && stylingProps && stylingProps.containerStyle) {\n      rbtProps.containerStyle = Object.assign(rbtProps.containerStyle, stylingProps.containerStyle);\n    }\n    if (rbtProps && rbtProps.tableStyle && stylingProps && stylingProps.tableStyle) {\n      rbtProps.tableStyle = Object.assign(rbtProps.tableStyle, stylingProps.tableStyle);\n    }\n    if (rbtProps && rbtProps.bodyStyle && stylingProps && stylingProps.bodyStyle) {\n      rbtProps.bodyStyle = Object.assign(rbtProps.bodyStyle, stylingProps.bodyStyle);\n    }\n    if (rbtProps && rbtProps.headerStyle && stylingProps && stylingProps.headerStyle) {\n      rbtProps.headerStyle = Object.assign(rbtProps.headerStyle, stylingProps.headerStyle);\n    }\n\n    const selectRowProp = {\n      mode: 'checkbox',\n      clickToSelect: this.props.selectRowProp,\n      onSelect: (row, isSelected, event) => {\n        this.handleRowSelect(row, isSelected, event);\n      },\n      onSelectAll: (isSelected, rows) => {\n        this.handleRowSelectAll(isSelected, rows);\n      }\n    };\n\n    selectRowProp.customComponent = getSelectable(this.props.selectorTheme, this.props.selectorMuiProps, this.props.selectorQflProps);\n\n    return (\n      <div {...qflProps}>\n        <BootstrapTable\n          ref=\"reactBootstrapTable\"\n          data={dataSource}\n          selectRow={selectRowProp}\n          {...rbtProps}\n        >\n          {this.props.thcSchema.map((thcItem) => <TableHeaderColumn\n            key={thcItem.name} {...thcItem.thcProps}>{thcItem.name}</TableHeaderColumn>)}\n        </BootstrapTable>\n      </div>\n    );\n  }\n}\n\nTable.childContextTypes = {\n  muiTheme: PropTypes.object\n};\n\nTable.defaultProps = {\n  theme: 'Default',\n  selectRowProp: false\n};\n\nexport default Table;\n"]}