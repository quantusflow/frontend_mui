{"version":3,"sources":["../../../src/Dialogs/SnackBar/SnackBar.js"],"names":["SnackBar","props","state","muiTheme","theme","sourceMuiProps","muiProps","sourceQflProps","qflProps","componentName","open","message","autoHideDuration","onRequestClose","bodyStyle","propTypes","children","node","object","string","number","openSnackBar","bool","func","childContextTypes","PropTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;;;AAEA;;AACA;;;;AAEA;;;IAGMA,Q;;;AA8BJ,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kIACXA,KADW;;AAGjB,UAAKC,KAAL,GAAa,EAAb;AAHiB;AAMlB;;;;sCAEiB;AAChB,aAAO;AACLC,kBAAU,yBAAY,KAAKF,KAAL,CAAWG,KAAvB;AADL,OAAP;AAGD;;;6BAEQ;AAAA,wBAEwB,8BAAW;AACxCA,eAAO,KAAKH,KAAL,CAAWG,KADsB;AAExCC,wBAAgB,KAAKJ,KAAL,CAAWK,QAFa;AAGxCC,wBAAgB,KAAKN,KAAL,CAAWO,QAHa;AAIxCC,uBAAe;AAJyB,OAAX,CAFxB;AAAA,UAECH,QAFD,eAECA,QAFD;AAAA,UAEWE,QAFX,eAEWA,QAFX;;AASP,aACE;AAAA;AAAA;AACE;AACE,gBAAM,KAAKP,KAAL,CAAWS,IADnB;AAEE,mBAAS,KAAKT,KAAL,CAAWU,OAFtB;AAGE,4BAAkB,KAAKV,KAAL,CAAWW,gBAH/B;AAIE,0BAAgB,KAAKX,KAAL,CAAWY,cAJ7B;AAKE,qBAAW,KAAKZ,KAAL,CAAWa;AALxB,WAMMR,QANN;AADF,OADF;AAYD;;;4BAhEMS,S,GAAY;AACjBC,YAAU,iBAAUC,IADH;AAEjB;;;AAGAb,SAAO,iBAAUc,MALA;AAMjB;;;AAGAZ,YAAU,iBAAUY,MATH;AAUjB;;;AAGAV,YAAU,iBAAUU,MAbH;AAcjB;;;AAGAP,WAAS,iBAAUQ,MAjBF;AAkBjB;;;AAGAP,oBAAkB,iBAAUQ,MArBX;;AAuBjBC,gBAAc,iBAAUC,IAvBP;AAwBjBT,kBAAgB,iBAAUU,IAxBT;AAyBjBT,aAAW,iBAAUI;;AAzBJ,C;;;AAmErBlB,SAASwB,iBAAT,GAA6B;AAC3BrB,YAAU,gBAAMsB,SAAN,CAAgBP;AADC,CAA7B;;AAIAlB,SAAS0B,YAAT,GAAwB;AACtBtB,SAAO,SADe;AAEtBQ,oBAAkB,IAFI;AAGtBN,YAAU,EAHY;AAItBE,YAAU;AAJY,CAAxB;;kBAOeR,Q","file":"SnackBar.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\n\nimport Snackbar from 'material-ui/Snackbar';\n\nimport { getMuiTheme } from 'material-ui/styles';\nimport { buildTheme } from '../../themeBuilder';\n\n/**\n * Material UI based SnackBar\n */\nclass SnackBar extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    /**\n     * Applies a given MaterialUI theme.\n     */\n    theme: PropTypes.object,\n    /**\n     * Forwarded to MaterialUI component.\n     */\n    muiProps: PropTypes.object,\n    /**\n     * Forwarded to wrapper component.\n     */\n    qflProps: PropTypes.object,\n    /**\n     * the message in the SnackBar\n     */\n    message: PropTypes.string,\n    /**\n     * time until close the Snackbar\n     */\n    autoHideDuration: PropTypes.number,\n\n    openSnackBar: PropTypes.bool,\n    onRequestClose: PropTypes.func,\n    bodyStyle: PropTypes.object\n\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n\n    };\n  }\n\n  getChildContext() {\n    return {\n      muiTheme: getMuiTheme(this.props.theme)\n    };\n  }\n\n  render() {\n\n    const { muiProps, qflProps } = buildTheme({\n      theme: this.props.theme,\n      sourceMuiProps: this.props.muiProps,\n      sourceQflProps: this.props.qflProps,\n      componentName: 'SnackBar'\n    });\n\n    return (\n      <div>\n        <Snackbar\n          open={this.props.open}\n          message={this.props.message}\n          autoHideDuration={this.props.autoHideDuration}\n          onRequestClose={this.props.onRequestClose}\n          bodyStyle={this.props.bodyStyle}\n          {...muiProps}\n        />\n      </div>\n    );\n  }\n}\n\nSnackBar.childContextTypes = {\n  muiTheme: React.PropTypes.object\n};\n\nSnackBar.defaultProps = {\n  theme: 'Default',\n  autoHideDuration: 4000,\n  muiProps: {},\n  qflProps: {}\n};\n\nexport default SnackBar;\n"]}