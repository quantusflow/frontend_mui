{"version":3,"sources":["../../../src/Dialogs/Stepper/Stepper.js"],"names":["Stepper","props","handleNext","stepIndex","state","setState","finished","steps","length","handlePrev","open","isDialog","muiTheme","theme","stepContent","buttonClicked","onDialogClose","onFinish","children","isLinear","isModal","sourceMuiProps","muiProps","sourceQflProps","qflProps","componentName","currentButton","handleClose","backgroundColor","color","stepperContent","map","step","height","stepProps","slProps","label","sbProps","stepper","width","finishedContent","getStepContent","marginTop","textAlign","marginRight","currentStepper","dialogTheme","title","modal","onRequestClose","dialogMuiProps","dialogQflProps","maxWidth","propTypes","node","object","array","bool","any","func","childContextTypes","PropTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;AAEA;;AAEA;;;;AAEA;;;IAGMA,O;;;AA2CF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oIACTA,KADS;;AAAA,cAgBnBC,UAhBmB,GAgBN,YAAM;AAAA,gBACRC,SADQ,GACK,MAAKC,KADV,CACRD,SADQ;;AAEf,kBAAKE,QAAL,CAAc;AACVF,2BAAWA,YAAY,CADb;AAEVG,0BAAUH,aAAa,MAAKF,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,GAAyB;AAFtC,aAAd;AAIH,SAtBkB;;AAAA,cAwBnBC,UAxBmB,GAwBN,YAAM;AAAA,gBACRN,SADQ,GACK,MAAKC,KADV,CACRD,SADQ;;AAEf,gBAAIA,YAAY,CAAhB,EAAmB;AACf,sBAAKE,QAAL,CAAc,EAACF,WAAWA,YAAY,CAAxB,EAAd;AACH;AACJ,SA7BkB;;AAGf,cAAKC,KAAL,GAAa;AACTE,sBAAU,KADD;AAETH,uBAAW,CAFF;AAGTO,kBAAMT,MAAMU;AAHH,SAAb;AAHe;AAQlB;;;;0CAEiB;AACd,mBAAO;AACHC,0BAAU,yBAAY,KAAKX,KAAL,CAAWY,KAAvB;AADP,aAAP;AAGH;;;uCAiBcV,S,EAAW;AACtB,gBAAI,KAAKF,KAAL,CAAWM,KAAX,CAAiBJ,SAAjB,EAA4BW,WAAhC,EAA6C;AACzC,uBACI,KAAKb,KAAL,CAAWM,KAAX,CAAiBJ,SAAjB,EAA4BW,WADhC;AAGH;AACJ;;;oCAEWC,a,EAAe;AACvB,iBAAKV,QAAL,CAAc,EAACK,MAAM,KAAP,EAAd;AACA,gBAAI,KAAKT,KAAL,CAAWe,aAAf,EAA8B;AAC1B,qBAAKf,KAAL,CAAWe,aAAX,CAAyB,CAAC,CAACD,aAA3B;AACH;AACH,gBAAI,KAAKd,KAAL,CAAWgB,QAAf,EAAyB;AACvB,qBAAKhB,KAAL,CAAWgB,QAAX;AACD;AACF;;;iCAEQ;AAAA;;AAAA,yBACyB,KAAKb,KAD9B;AAAA,gBACEE,QADF,UACEA,QADF;AAAA,gBACYH,SADZ,UACYA,SADZ;AAAA,yBAG6C,KAAKF,KAHlD;AAAA,gBAGGiB,QAHH,UAGGA,QAHH;AAAA,gBAGaC,QAHb,UAGaA,QAHb;AAAA,gBAGuBC,OAHvB,UAGuBA,OAHvB;AAAA,gBAGgCT,QAHhC,UAGgCA,QAHhC;;AAAA,8BAI0B,8BAAW;AACtCE,uBAAO,KAAKZ,KAAL,CAAWY,KADoB;AAEtCQ,gCAAgB,KAAKpB,KAAL,CAAWqB,QAFW;AAGtCC,gCAAgB,KAAKtB,KAAL,CAAWuB,QAHW;AAItCC,+BAAe;AAJuB,aAAX,CAJ1B;AAAA,gBAIGH,QAJH,eAIGA,QAJH;AAAA,gBAIaE,QAJb,eAIaA,QAJb;;AAWL,gBAAIE,gBAAgB,IAApB;AACA,gBAAIvB,cAAc,KAAKF,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,GAAyB,CAA3C,EAA8C;AAC1CkB,gCAAgB;AACd,2BAAQ,QADM;AAEd,gCAAY,oBAACX,aAAD;AAAA,+BAAmB,OAAKY,WAAL,CAAiBZ,aAAjB,CAAnB;AAAA,qBAFE;AAGd,2BAAO,EAACa,iBAAiB,SAAlB,EAA6BC,OAAO,SAApC;AAHO,kBAAhB;AAKH,aAND,MAMO;AACHH,gCAAgB;AACd,2BAAO,QADO;AAEd,gCAAY,KAAKxB,UAFH;AAGd,2BAAO,EAAC0B,iBAAiB,SAAlB,EAA6BC,OAAO,SAApC;AAHO,kBAAhB;AAKH;;AAED,gBAAIC,iBACA,KAAK7B,KAAL,CAAWM,KAAX,CAAiBwB,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC3B,uBACI;AAAA;AAAA,6CAAM,OAAO,EAACC,QAAQ,MAAT,EAAb,IAAmCD,KAAKE,SAAxC;AACI;AAAA;AAAeF,6BAAKG,OAApB;AAA8BH,6BAAKI;AAAnC;AADJ,iBADJ;AAKH,aAND,CADJ;;AASA,gBAAIjB,QAAJ,EAAc;AACVW,iCACI,KAAK7B,KAAL,CAAWM,KAAX,CAAiBwB,GAAjB,CAAqB,UAACC,IAAD,EAAU;AAC3B,2BACI;AAAA;AAAA,0BAAM,OAAO,EAACC,QAAQ,MAAT,EAAb;AACI;AAAA;AAAgBD,iCAAKK,OAArB;AACI;AAAA;AAAeL,qCAAKG,OAApB;AAA8BH,qCAAKI;AAAnC;AADJ;AADJ,qBADJ;AAOH,iBARD,CADJ;AAUH;;AAED,gBAAME,UACF;AAAA;AAAA,2CAASd,QAAT,IAAmB,OAAO,EAACe,OAAO,MAAR,EAA1B;AACI;AAAA;AAAA,+CAAgBjB,QAAhB,IAA0B,YAAYnB,SAAtC,EAAiD,QAAQgB,QAAzD;AACKW;AADL,iBADJ;AAII;AAAA;AAAA;AACKxB,+BACO,KAAKL,KAAL,CAAWuC,eADlB,GAGO;AAAA;AAAA;AACK,6BAAKC,cAAL,CAAoBtC,SAApB,CADL;AAKI;AAAA;AAAA,8BAAK,OAAO,EAACuC,WAAW,EAAZ,EAAgBC,WAAW,OAA3B,EAAZ;AACI;AACI,uCAAM,WADV;AAEI,0CAAUxC,cAAc,CAF5B;AAGI,4CAAY,KAAKM,UAHrB;AAII,uCAAO,EAACmC,aAAa,CAAd,EAAiBhB,iBAAiB,SAAlC,EAA6CC,OAAO,SAApD;AAJX,8BADJ;AAOKH;AAPL;AALJ;AAJZ;AAJJ,aADJ;;AA4BA,gBAAImB,iBAAiB,IAArB;AACA,gBAAIlC,QAAJ,EAAc;AACVkC,iCACI;AAAA;AAAA;AACI,+BAAO,KAAK5C,KAAL,CAAW6C,WADtB;AAEI;AACIC,mCAAO,cADX;AAEIC,mCAAO5B,OAFX;AAGI6B,4CAAgB,wBAAClC,aAAD;AAAA,uCAAmB,OAAKY,WAAL,CAAiBZ,aAAjB,CAAnB;AAAA,6BAHpB;AAIIL,kCAAM,KAAKN,KAAL,CAAWM;AAJrB,2BAKO,KAAKT,KAAL,CAAWiD,cALlB,CAFJ;AASI,6DACO,KAAKjD,KAAL,CAAWkD,cADlB;AATJ;AAaKb;AAbL,iBADJ;AAiBH,aAlBD,MAkBO;AACHO,iCAAiBP,OAAjB;AACH;;AAGD,mBACI;AAAA;AAAA,2CAASd,QAAT,IAAmB,OAAO,EAACe,OAAO,MAAR,EAAiBN,QAAQ,MAAzB,EAAiCmB,UAAU,GAA3C,EAA1B;AACKP;AADL,aADJ;AAKH;;;4BApMMQ,S,GAAY;AACfnC,cAAU,iBAAUoC,IADL;AAEf;;;AAGAzC,WAAO,iBAAU0C,MALF;AAMf;;;AAGAjC,cAAU,iBAAUiC,MATL;AAUf;;;AAGA/B,cAAU,iBAAU+B,MAbL;AAcf;;;AAGAhD,WAAO,iBAAUiD,KAjBF;AAkBf;;;AAGArC,cAAU,iBAAUsC,IArBL;AAsBf;;;AAGA9C,cAAU,iBAAU8C,IAzBL;AA0Bf;;;AAGArC,aAAS,iBAAUqC,IA7BJ;AA8Bf;;;AAGAjB,qBAAiB,iBAAUkB,GAjCZ;AAkCfzC,cAAU,iBAAU0C,IAlCL;;AAoCf3C,mBAAe,iBAAU2C,IApCV;AAqCfT,oBAAgB,iBAAUQ,GArCX;AAsCfP,oBAAgB,iBAAUO,GAtCX;AAuCfZ,iBAAa,iBAAUS;AAvCR,C;;;AAuMvBvD,QAAQ4D,iBAAR,GAA4B;AACxBhD,cAAU,gBAAMiD,SAAN,CAAgBN;AADF,CAA5B;;AAIAvD,QAAQ8D,YAAR,GAAuB;AACnBjD,WAAO,SADY;AAEnBS,cAAU,EAFS;AAGnBE,cAAU;AAHS,CAAvB;;kBAMexB,O","file":"Stepper.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport { Stepper as MUIStepper } from 'material-ui';\nimport { Dialog } from '../../index';\nimport { Step, StepLabel, StepContent, StepButton } from 'material-ui/Stepper';\nimport FlatButton from 'material-ui/FlatButton';\n\nimport { buildTheme } from '../../themeBuilder';\n\nimport { getMuiTheme } from 'material-ui/styles';\n\n/**\n * Material UI based stepper\n */\nclass Stepper extends Component {\n    static propTypes = {\n        children: PropTypes.node,\n        /**\n         * Applies a given MaterialUI theme.\n         */\n        theme: PropTypes.object,\n        /**\n         * Forwarded to MaterialUI component.\n         */\n        muiProps: PropTypes.object,\n        /**\n         * Forwarded to wrapper component.\n         */\n        qflProps: PropTypes.object,\n        /**\n         * defines the steps in an array\n         */\n        steps: PropTypes.array,\n        /**\n         * default it's true\n         */\n        isLinear: PropTypes.bool,\n        /**\n         * when it's true a Dialog will wrap stepper\n         */\n        isDialog: PropTypes.bool,\n        /**\n         * when it's true a Dialog cannot be closed\n         */\n        isModal: PropTypes.bool,\n        /**\n         * content of stepper when all steps are finished\n         */\n        finishedContent: PropTypes.any,\n        onFinish: PropTypes.func,\n\n        onDialogClose: PropTypes.func,\n        dialogMuiProps: PropTypes.any,\n        dialogQflProps: PropTypes.any,\n        dialogTheme: PropTypes.object\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            finished: false,\n            stepIndex: 0,\n            open: props.isDialog\n        };\n    }\n\n    getChildContext() {\n        return {\n            muiTheme: getMuiTheme(this.props.theme)\n        };\n    }\n\n    handleNext = () => {\n        const {stepIndex} = this.state;\n        this.setState({\n            stepIndex: stepIndex + 1,\n            finished: stepIndex >= this.props.steps.length -1,\n        });\n    };\n\n    handlePrev = () => {\n        const {stepIndex} = this.state;\n        if (stepIndex > 0) {\n            this.setState({stepIndex: stepIndex - 1});\n        }\n    };\n\n    getStepContent(stepIndex) {\n        if (this.props.steps[stepIndex].stepContent) {\n            return (\n                this.props.steps[stepIndex].stepContent\n            );\n        }\n    }\n\n    handleClose(buttonClicked) {\n        this.setState({open: false});\n        if (this.props.onDialogClose) {\n            this.props.onDialogClose(!!buttonClicked);\n        }\n      if (this.props.onFinish) {\n        this.props.onFinish();\n      }\n    }\n\n    render() {\n        const {finished, stepIndex} = this.state;\n\n        const { children, isLinear, isModal, isDialog } = this.props;\n        const { muiProps, qflProps } = buildTheme({\n            theme: this.props.theme,\n            sourceMuiProps: this.props.muiProps,\n            sourceQflProps: this.props.qflProps,\n            componentName: 'Stepper'\n        });\n\n        let currentButton = null;\n        if (stepIndex === this.props.steps.length -1) {\n            currentButton = <FlatButton\n              label= {'Fertig'}\n              onTouchTap={(buttonClicked) => this.handleClose(buttonClicked)}\n              style={{backgroundColor: '#000000', color: '#ffffff'}}\n            />\n        } else {\n            currentButton = <FlatButton\n              label={'Weiter'}\n              onTouchTap={this.handleNext}\n              style={{backgroundColor: '#000000', color: '#ffffff'}}\n            />\n        }\n\n        let stepperContent =\n            this.props.steps.map((step) => {\n                return (\n                    <Step style={{height: '30px'}} {...step.stepProps}>\n                        <StepLabel {...step.slProps}>{step.label}</StepLabel>\n                    </Step>\n                )\n            });\n\n        if (isLinear) {\n            stepperContent =\n                this.props.steps.map((step) => {\n                    return (\n                        <Step style={{height: '30px'}}>\n                            <StepButton {...step.sbProps}>\n                                <StepLabel {...step.slProps}>{step.label}</StepLabel>\n                            </StepButton>\n                        </Step>\n                    )\n                });\n        }\n\n        const stepper =\n            <div {...qflProps} style={{width: '100%'}}>\n                <MUIStepper {...muiProps} activeStep={stepIndex} linear={isLinear}>\n                    {stepperContent}\n                </MUIStepper>\n                <div>\n                    {finished ? (\n                            this.props.finishedContent\n                        ) : (\n                            <div>\n                                {this.getStepContent(stepIndex)}\n                                {\n                                    //TODO style buttons with props\n                                }\n                                <div style={{marginTop: 12, textAlign: 'right'}}>\n                                    <FlatButton\n                                        label=\"Zurück\"\n                                        disabled={stepIndex === 0}\n                                        onTouchTap={this.handlePrev}\n                                        style={{marginRight: 9, backgroundColor: '#000000', color: '#ffffff'}}\n                                    />\n                                    {currentButton}\n                                </div>\n                            </div>\n                        )}\n                </div>\n            </div>;\n\n        let currentStepper = null;\n        if (isDialog) {\n            currentStepper = (\n                <Dialog\n                    theme={this.props.dialogTheme}\n                    muiProps={{\n                        title: 'Registration',\n                        modal: isModal,\n                        onRequestClose: (buttonClicked) => this.handleClose(buttonClicked),\n                        open: this.state.open,\n                        ...this.props.dialogMuiProps\n                    }}\n                    qflProps={{\n                        ...this.props.dialogQflProps\n                    }}\n                >\n                    {stepper}\n                </Dialog>\n            );\n        } else {\n            currentStepper = stepper;\n        }\n\n\n        return (\n            <div {...qflProps} style={{width: '100%',  height: '100%', maxWidth: 400}}>\n                {currentStepper}\n            </div>\n        );\n    }\n}\n\nStepper.childContextTypes = {\n    muiTheme: React.PropTypes.object\n};\n\nStepper.defaultProps = {\n    theme: 'Default',\n    muiProps: {},\n    qflProps: {}\n};\n\nexport default Stepper;\n"]}