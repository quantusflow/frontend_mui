{"version":3,"sources":["../../../src/Processable/CrudTable/CrudTable.js"],"names":["ProcessableCrudTable","props","state","currentOffset","currentFirst","pageSize","isFetching","hasLoadedMore","hasReloaded","hasLoaded","synced","entityCollection","fetcher","mode","offset","first","query","JSON","stringify","operator","queries","baseFilter","e","mounted","done","setState","searchValue","ignoreCase","searchFilter","columnSchema","filter","element","searchable","map","searchableType","parsedSearchValue","parseFloat","parseInt","isNaN","attribute","thcProps","dataField","type","value","firstCall","newEntityCollection","edges","item","node","setTimeout","currentEntityCollection","concat","fetchingMode","initCollection","extendCollection","row","onRowDoubleClick","getGlobalSearchFilter","sortName","sortOrder","orderBy","attributes","order","pageInfo","hasNextPage","newOffset","newFirst","refs","entitiesTable","cleanSelected","processKey","data","entityTypeName","cleanSelectedEntities","children","theme","sourceRbtProps","rbtProps","sourceQflProps","qflProps","componentName","tableElement","mbClient","tableOverlayStyles","tableStyles","handleSearch","handleProcessEnded","createStartToken","createButtonTheme","createDialogTheme","createFormItemTheme","createConfirmTheme","createWidgetTheme","createTheme","itemBasedButtonTheme","listBasedButtonTheme","filterMenuTheme","baseFilterMenuTheme","searchFieldTheme","tableTheme","tableSelectorTheme","title","prepareCollection","itemBasedButtonSchema","listBasedButtonSchema","filterMenuSchema","baseFilterMenuSchema","remote","defaultSortName","defaultSortOrder","options","handleRowDoubleClick","onSortChange","handleSortChange","onLoadMore","handleLoadMore","thcSchema","propTypes","string","object","func","required","number","arrayOf","defaultProps"],"mappings":"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","file":"CrudTable.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { buildTheme } from '../../themeBuilder';\nimport ProcessableTable from '../Table/Table';\n\nclass ProcessableCrudTable extends Component {\n  static propTypes = {\n    children: PropTypes.node,\n    title: PropTypes.string,\n\n    mbClient: PropTypes.object,\n    entityCollection: PropTypes.object,\n    fetcher: PropTypes.func.required,\n    fetchingMode: PropTypes.object,\n    baseFilter: PropTypes.func,\n\n    pageSize: PropTypes.number,\n    entityTypeName: PropTypes.string,\n    onRowDoubleClick: PropTypes.func,\n\n    createStartToken: PropTypes.object,\n    createButtonTheme: PropTypes.object,\n    createDialogTheme: PropTypes.object,\n    createFormItemTheme: PropTypes.object,\n    createConfirmTheme: PropTypes.object,\n    createWidgetTheme: PropTypes.object,\n    createTheme: PropTypes.object,\n\n    itemBasedButtonSchema: PropTypes.arrayOf(PropTypes.object),\n    listBasedButtonSchema: PropTypes.arrayOf(PropTypes.object),\n    filterMenuSchema: PropTypes.arrayOf(PropTypes.object),\n    baseFilterMenuSchema: PropTypes.arrayOf(PropTypes.object),\n\n    itemBasedButtonTheme: PropTypes.object,\n    listBasedButtonTheme: PropTypes.object,\n    filterMenuTheme: PropTypes.object,\n    baseFilterMenuTheme: PropTypes.object,\n\n    searchFieldTheme: PropTypes.object,\n\n    defaultSortName: PropTypes.string,\n    defaultSortOrder: PropTypes.string,\n\n    columnSchema: PropTypes.arrayOf(PropTypes.object),\n\n    tableOverlayStyles: PropTypes.object,\n    tableStyles: PropTypes.object,\n\n    theme: PropTypes.object,\n    tableTheme: PropTypes.object,\n    tableSelectorTheme: PropTypes.object\n  };\n\n  static defaultProps = {\n    pageSize: 16,\n    fetchingMode: 'initial',\n    entityTypeName: 'Entity',\n    defaultSortName: 'id',\n    defaultSortOrder: 'asc'\n  };\n  \n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentOffset: 0,\n      currentFirst: props.pageSize,\n      isFetching: true,\n      hasLoadedMore: false,\n      hasReloaded: false,\n      hasLoaded: false,\n      synced: false,\n      entityCollection: []\n    };\n  }\n\n  componentDidMount() {\n\n    this.props.fetcher({\n      mode: 'load',\n      offset: this.state.currentOffset,\n      first: this.props.pageSize,\n      query: JSON.stringify({\n        operator: 'and',\n        queries: (this.props.baseFilter\n          ? [\n            this.props.baseFilter()\n          ] : []\n        )\n      })\n    }, (e) => {\n      if (e.mounted && !e.done) {\n        this.setState({\n          isFetching: true,\n          hasLoaded: false,\n          synced: false\n        });\n      } else if (e.mounted && e.done) {\n        this.setState({\n          isFetching: false,\n          hasLoaded: true\n        });\n      }\n    });\n  }\n\n  getGlobalSearchFilter(searchValue, ignoreCase) {\n    const searchFilter = this.props.columnSchema.filter((element) => (element.searchable)).map((element) => {\n      if (element.searchableType === 'float' || element.searchableType === 'integer') {\n        const parsedSearchValue = (element.searchableType === 'float' ? parseFloat(searchValue) : parseInt(searchValue));\n        if (isNaN(parsedSearchValue)) {\n          return null;\n        }\n        searchValue = parsedSearchValue;\n        \n        return {\n          attribute: element.thcProps.dataField,\n          type: 'number',\n          operator: '=',\n          value: searchValue\n        }\n      }\n\n      return {\n        attribute: element.thcProps.dataField,\n        operator: 'contains',\n        value: searchValue,\n        ignoreCase\n      }\n    }).filter((element) => (element != null));\n\n    return searchFilter;\n  }\n\n  initCollection(firstCall) {\n    let newEntityCollection = (this.state.entityCollection || []);\n    const { entityCollection } = this.props;\n\n    if (entityCollection && entityCollection.edges) {\n      newEntityCollection = entityCollection.edges.map((item) => item.node);\n    }\n\n    setTimeout(() => {\n      this.setState({\n        entityCollection: newEntityCollection,\n        synced: true\n      });\n    }, 0);\n\n    return newEntityCollection;\n  }\n\n  extendCollection() {\n    const currentEntityCollection = (this.state.entityCollection || []);\n    let newEntityCollection = currentEntityCollection;\n    const { entityCollection } = this.props;\n    if (entityCollection && entityCollection.edges) {\n      newEntityCollection = currentEntityCollection.concat(entityCollection.edges.map((item) => item.node));\n    }\n\n    setTimeout(() => {\n      this.setState({\n        currentOffset: (this.state.currentOffset + this.props.pageSize),\n        entityCollection: newEntityCollection,\n        synced: true\n      });\n    }, 0);\n\n    return newEntityCollection;\n  }\n\n  prepareCollection() {\n    if (!this.state.synced) {\n      if (!this.state.isFetching) {\n        if (this.state.hasLoaded && this.props.fetchingMode === 'load') {\n          return this.initCollection(true);\n        } else if (this.state.hasReloaded && this.state.hasLoaded && this.props.fetchingMode === 'reload') {\n          return this.initCollection(false);\n        } else if (this.state.hasLoadedMore && this.state.hasLoaded && this.props.fetchingMode === 'more') {\n          return this.extendCollection();\n        } else {\n          return this.initCollection(true);\n        }\n      }\n    }\n\n    return (this.state.entityCollection || []);\n  }\n\n  handleRowDoubleClick(row) {\n    if (this.props.onRowDoubleClick) {\n      this.props.onRowDoubleClick(row);\n    }\n  }\n\n  handleSearch(searchValue) {\n    this.setState({\n      currentOffset: 0\n    }, () => {\n      if (searchValue) {\n        this.props.fetcher({\n          mode: 'reload',\n          offset: this.state.currentOffset,\n          first: this.state.currentFirst,\n          query: JSON.stringify({\n            operator: 'and',\n            queries: (this.props.baseFilter\n              ? [\n                this.props.baseFilter(), {\n                  operator: 'or',\n                  queries: this.getGlobalSearchFilter(searchValue, true)\n                }\n              ] : [\n                this.getGlobalSearchFilter(searchValue, true)\n              ]\n            )\n          })\n        }, (e) => {\n          if (e.mounted && !e.done) {\n            this.setState({\n              synced: false,\n              isFetching: true,\n              hasReloaded: false\n            });\n          } else if (e.mounted && e.done) {\n            this.setState({\n              isFetching: false,\n              hasReloaded: true\n            });\n          }\n        });\n      } else {\n        this.props.fetcher({\n          mode: 'reload',\n          offset: this.state.currentOffset,\n          first: this.state.currentFirst,\n          query: JSON.stringify({\n            operator: 'and',\n            queries: (this.props.baseFilter()\n              ? [\n                this.props.baseFilter()\n              ] : []\n            )\n          })\n        }, (e) => {\n          if (e.mounted && !e.done) {\n            this.setState({\n              synced: false,\n              isFetching: true,\n              hasReloaded: false\n            });\n          } else if (e.mounted && e.done) {\n            this.setState({\n              isFetching: false,\n              hasReloaded: true\n            });\n          }\n        });\n      }\n    });\n\n  }\n\n  handleSortChange(sortName, sortOrder) {\n    if (sortName && sortOrder) {\n      this.setState({\n        currentOffset: 0\n      }, () => {\n        this.props.fetcher({\n          mode: 'reload',\n          offset: this.state.currentOffset,\n          first: this.state.currentFirst,\n          orderBy: JSON.stringify({ attributes: [{ attribute: sortName, order: sortOrder }] })\n        }, (e) => {\n          if (e.mounted && !e.done) {\n            this.setState({\n              synced: false,\n              isFetching: true,\n              hasReloaded: false\n            });\n          } else if (e.mounted && e.done) {\n            this.setState({\n              isFetching: false,\n              hasReloaded: true\n            });\n          }\n        });\n      });\n    }\n  }\n\n  handleLoadMore() {\n    const { entityCollection } = this.props;\n\n    if (!this.state.isFetching && entityCollection && entityCollection.pageInfo && entityCollection.pageInfo.hasNextPage) {\n      const currentOffset = this.state.currentOffset;\n      const newOffset = (currentOffset + this.props.pageSize);\n      const newFirst = (this.props.pageSize + newOffset);\n      this.setState({\n        currentFirst: newFirst\n      }, () => {\n        this.props.fetcher({\n          mode: 'more',\n          offset: newOffset\n        }, (e) => {\n          if (e.mounted && !e.done) {\n            this.setState({\n              synced: false,\n              isFetching: true,\n              hasLoadedMore: false\n            });\n          } else if (e.mounted && e.done) {\n            this.setState({\n              isFetching: false,\n              hasLoadedMore: true\n            });\n          }\n        });\n      });\n    }\n  }\n\n  cleanSelectedEntities() {\n    if (this.refs && this.refs.entitiesTable && this.refs.entitiesTable.cleanSelected) {\n      this.refs.entitiesTable.cleanSelected();\n    }\n  }\n\n  handleProcessEnded(processKey, data) {\n    this.props.fetcher({\n      mode: 'reload',\n      offset: this.state.currentOffset\n    }, (e) => {\n      if (e.mounted && !e.done) {\n        this.setState({\n          synced: false,\n          isFetching: true,\n          hasReloaded: false\n        });\n      } else if (e.mounted && e.done) {\n        this.setState({\n          isFetching: false,\n          hasReloaded: true\n        }, () => {\n          if (processKey === ('delete' + this.props.entityTypeName) && data.data === true) {\n            this.cleanSelectedEntities();\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n\n    const { qflProps, rbtProps } = buildTheme({\n      theme: this.props.theme,\n      sourceRbtProps: this.props.rbtProps,\n      sourceQflProps: this.props.qflProps,\n      componentName: 'Table'\n    });\n\n    let tableElement = null;\n    if (this.state.hasLoaded) {\n      tableElement = (\n        <ProcessableTable\n          mbClient={this.props.mbClient}\n\n          tableOverlayStyles={this.props.tableOverlayStyles}\n          tableStyles={this.props.tableStyles}\n\n          theme={this.props.theme}\n\n          ref=\"entitiesTable\"\n          dataClassName={this.props.entityTypeName}\n          frame={false}\n          onSearch={(searchValue) => this.handleSearch(searchValue)}\n          onProcessEnded={(processKey, data) => this.handleProcessEnded(processKey, data)}\n          createProcessKey=\"Create\"\n          createStartToken={this.props.createStartToken}\n\n          createButtonTheme={this.props.createButtonTheme}\n          createDialogTheme={this.props.createDialogTheme}\n          createFormItemTheme={this.props.createFormItemTheme}\n          createConfirmTheme={this.props.createConfirmTheme}\n          createWidgetTheme={this.props.createWidgetTheme}\n          createTheme={this.props.createTheme}\n\n          itemBasedButtonTheme={this.props.itemBasedButtonTheme}\n          listBasedButtonTheme={this.props.listBasedButtonTheme}\n          filterMenuTheme={this.props.filterMenuTheme}\n          baseFilterMenuTheme={this.props.baseFilterMenuTheme}\n\n          searchFieldTheme={this.props.searchFieldTheme}\n\n          tableTheme={this.props.tableTheme}\n          tableSelectorTheme={this.props.tableSelectorTheme}\n\n          title={this.props.title}\n          data={this.prepareCollection()}\n          itemBasedButtonSchema={this.props.itemBasedButtonSchema}\n          listBasedButtonSchema={this.props.listBasedButtonSchema}\n          filterMenuSchema={this.props.filterMenuSchema}\n          baseFilterMenuSchema={this.props.baseFilterMenuSchema}\n          tableProps={{\n            rbtProps: {\n              remote: true,\n              sortName: this.props.defaultSortName,\n              sortOrder: this.props.defaultSortOrder,\n              defaultSortName: this.props.defaultSortName,\n              defaultSortOrder: this.props.defaultSortOrder,\n              options: {\n                onRowDoubleClick: (row) => this.handleRowDoubleClick(row),\n                onSortChange: (sortName, sortOrder) => this.handleSortChange(sortName, sortOrder),\n                onLoadMore: () => this.handleLoadMore()\n              },\n              ...rbtProps\n            },\n            thcSchema: this.props.columnSchema,\n            ...qflProps\n          }}\n        />\n      );\n    }\n\n    return (\n      <div>\n        {tableElement}\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default ProcessableCrudTable;\n"]}