{"version":3,"sources":["../../../src/InputForms/CheckBox/CheckBox.js"],"names":["CheckBox","props","state","currentValue","value","muiTheme","theme","b","c","setState","e","oldValue","newValue","onChange","dataKey","sourceMuiProps","muiProps","sourceQflProps","qflProps","componentName","handleChange","propTypes","object","bool","func","string","childContextTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;AAEA;;AAEA;;;;AAEA;;;IAGMA,Q;;;AAyBF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,0BAAcF,MAAMG;AADX,SAAb;AAHe;AAMlB;;;;0CAEiB;AACd,mBAAO;AACHC,0BAAU,yBAAY,KAAKJ,KAAL,CAAWK,KAAvB;AADP,aAAP;AAGH;;;kDAEyBL,K,EAAOM,C,EAAGC,C,EAAG;AACnC,iBAAKC,QAAL,CAAc;AACVN,8BAAcF,MAAMG;AADV,aAAd;AAGH;;;qCAEYM,C,EAAG;AACZ,gBAAMC,WAAW,KAAKT,KAAL,CAAWC,YAA5B;AACA,gBAAMS,WAAW,CAAC,KAAKV,KAAL,CAAWC,YAA7B;AACA,iBAAKM,QAAL,CAAc;AACVN,8BAAcS;AADJ,aAAd;AAGA,gBAAI,KAAKX,KAAL,CAAWY,QAAf,EAAyB;AACrB,qBAAKZ,KAAL,CAAWY,QAAX,CAAoBH,CAApB,EAAuBC,QAAvB,EAAiCC,QAAjC,EAA2C,KAAKX,KAAL,CAAWa,OAAtD;AACH;AACJ;;;iCAEQ;AAAA;;AAAA,8BAC0B,8BAAW;AACtCR,uBAAO,KAAKL,KAAL,CAAWK,KADoB;AAEtCS,gCAAgB,KAAKd,KAAL,CAAWe,QAFW;AAGtCC,gCAAgB,KAAKhB,KAAL,CAAWiB,QAHW;AAItCC,+BAAe;AAJuB,aAAX,CAD1B;AAAA,gBACGH,QADH,eACGA,QADH;AAAA,gBACaE,QADb,eACaA,QADb;;AAQL,mBACI;AAAA;AAASA,wBAAT;AACI,+FAAiBF,QAAjB,IAA2B,SAAS,KAAKd,KAAL,CAAWC,YAA/C,EAA6D,SAAS,iBAACO,CAAD;AAAA,+BAAO,OAAKU,YAAL,CAAkBV,CAAlB,CAAP;AAAA,qBAAtE;AADJ,aADJ;AAKH;;;4BApEMW,S,GAAY;AACf;;;AAGAf,WAAO,oBAAUgB,MAJF;AAKf;;;AAGAN,cAAU,oBAAUM,MARL;AASf;;;AAGAJ,cAAU,oBAAUI,MAZL;AAaf;;;AAGAlB,WAAO,oBAAUmB,IAhBF;AAiBf;;;AAGAV,cAAU,oBAAUW,IApBL;AAqBfV,aAAS,oBAAUW;AArBJ,C;;;AAuEvBzB,SAAS0B,iBAAT,GAA6B;AACzBrB,cAAU,oBAAUiB;AADK,CAA7B;;AAIAtB,SAAS2B,YAAT,GAAwB;AACpBrB,WAAO,SADa;AAEpBU,cAAU;AAFU,CAAxB;;kBAKehB,Q","file":"CheckBox.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Checkbox as MUICheckBox } from 'material-ui';\n\nimport { buildTheme } from '../../themeBuilder';\n\nimport { getMuiTheme } from 'material-ui/styles';\n\n/**\n * Material UI based check box\n */\nclass CheckBox extends Component {\n    static propTypes = {\n        /**\n         * Applies a given MaterialUI theme.\n         */\n        theme: PropTypes.object,\n        /**\n         * Forwarded to MaterialUI component.\n         */\n        muiProps: PropTypes.object,\n        /**\n         * Forwarded to wrapper component.\n         */\n        qflProps: PropTypes.object,\n        /**\n         * Value of the CheckBox.\n         */\n        value: PropTypes.bool,\n        /**\n         * Fired when value changes\n         */\n        onChange: PropTypes.func,\n        dataKey: PropTypes.string\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentValue: props.value\n        }\n    }\n\n    getChildContext() {\n        return {\n            muiTheme: getMuiTheme(this.props.theme)\n        };\n    }\n\n    componentWillReceiveProps(props, b, c) {\n        this.setState({\n            currentValue: props.value\n        })\n    }\n\n    handleChange(e) {\n        const oldValue = this.state.currentValue;\n        const newValue = !this.state.currentValue;\n        this.setState({\n            currentValue: newValue\n        });\n        if (this.props.onChange) {\n            this.props.onChange(e, oldValue, newValue, this.props.dataKey);\n        }\n    }\n\n    render() {\n        const { muiProps, qflProps } = buildTheme({\n            theme: this.props.theme,\n            sourceMuiProps: this.props.muiProps,\n            sourceQflProps: this.props.qflProps,\n            componentName: 'CheckBox'\n        });\n\n        return (\n            <div {...qflProps}>\n                <MUICheckBox {...muiProps} checked={this.state.currentValue} onCheck={(e) => this.handleChange(e)}/>\n            </div>\n        );\n    }\n}\n\nCheckBox.childContextTypes = {\n    muiTheme: PropTypes.object\n};\n\nCheckBox.defaultProps = {\n    theme: 'Default',\n    muiProps: {}\n};\n\nexport default CheckBox;\n"]}