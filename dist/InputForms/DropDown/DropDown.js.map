{"version":3,"sources":["../../../src/InputForms/DropDown/DropDown.js"],"names":["DropDown","props","state","currentValue","value","muiTheme","theme","event","index","oldValue","newValue","setState","onChange","items","children","sourceMuiProps","muiProps","sourceQflProps","qflProps","componentName","labelStyle","label","handleChange","propTypes","node","object","string","any","childContextTypes","PropTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;AAEA;;;;AAEA;;;IAGMA,Q;;;AA4BF,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA,sIACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,0BAAcF,MAAMG;AADX,SAAb;AAHe;AAMlB;;;;0CAEiB;AACd,mBAAO;AACHC,0BAAU,yBAAY,KAAKJ,KAAL,CAAWK,KAAvB;AADP,aAAP;AAGH;;;qCAEaC,K,EAAOC,K,EAAOJ,K,EAAO;AAC/B,gBAAMK,WAAW,KAAKP,KAAL,CAAWC,YAA5B;AACA,gBAAMO,WAAWN,KAAjB;;AAEA,iBAAKO,QAAL,CAAc;AACVR,8BAAcO;AADJ,aAAd;AAGA,gBAAI,KAAKT,KAAL,CAAWW,QAAf,EAAyB;AACrB,qBAAKX,KAAL,CAAWW,QAAX,CAAoBL,KAApB,EAA2BC,KAA3B,EAAkCC,QAAlC,EAA4CC,QAA5C;AACH;AACJ;;;iCAEQ;AAAA;;AACL,gBAAIG,QAAQ,KAAKZ,KAAL,CAAWa,QAAvB;AACA,gBAAI,KAAKb,KAAL,CAAWY,KAAf,EAAsB;AAClBA,wBAAQ,KAAKZ,KAAL,CAAWY,KAAnB;AACH;;AAJI,8BAM0B,8BAAW;AACtCP,uBAAO,KAAKL,KAAL,CAAWK,KADoB;AAEtCS,gCAAgB,KAAKd,KAAL,CAAWe,QAFW;AAGtCC,gCAAgB,KAAKhB,KAAL,CAAWiB,QAHW;AAItCC,+BAAe;AAJuB,aAAX,CAN1B;AAAA,gBAMGH,QANH,eAMGA,QANH;AAAA,gBAMaE,QANb,eAMaA,QANb;;AAaL,mBACI;AAAA;AAASA,wBAAT;AACI;AAAA;AAAA,sBAAM,OAAOA,SAASE,UAAtB;AAAmC,yBAAKnB,KAAL,CAAWoB;AAA9C,iBADJ;AAEI;AAAA;AAAA,+CAAsBL,QAAtB,IAAgC,OAAO,KAAKd,KAAL,CAAWC,YAAlD,EAAgE,UAAU,kBAACI,KAAD,EAAQC,KAAR,EAAeJ,KAAf;AAAA,mCAAyB,OAAKkB,YAAL,CAAkBf,KAAlB,EAAyBC,KAAzB,EAAgCJ,KAAhC,CAAzB;AAAA,yBAA1E;AACKS;AADL;AAFJ,aADJ;AAQH;;;4BA1EMU,S,GAAY;AACf;;;AAGAV,WAAO,iBAAUW,IAJF;AAKf;;;AAGAV,cAAU,iBAAUU,IARL;AASf;;;AAGAlB,WAAO,iBAAUmB,MAZF;AAaf;;;AAGAT,cAAU,iBAAUS,MAhBL;AAiBf;;;AAGAJ,WAAO,iBAAUK,MApBF;AAqBf;;;AAGAtB,WAAO,iBAAUuB;AAxBF,C;;;AA6EvB3B,SAAS4B,iBAAT,GAA6B;AACzBvB,cAAU,gBAAMwB,SAAN,CAAgBJ;AADD,CAA7B;;AAIAzB,SAAS8B,YAAT,GAAwB;AACpBjB,WAAO,IADa;AAEpBP,WAAO,SAFa;AAGpBU,cAAU;AAHU,CAAxB;;kBAMehB,Q","file":"DropDown.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\nimport { DropDownMenu as MUIDropDownMenu } from 'material-ui';\n\nimport { buildTheme } from '../../themeBuilder';\n\nimport { getMuiTheme } from 'material-ui/styles';\n\n/**\n * Material UI based drop down menu\n */\nclass DropDown extends Component {\n    static propTypes = {\n        /**\n         * Pushed as children to MaterialUI component. Use this for MenuItems\n         */\n        items: PropTypes.node,\n        /**\n         * Pushed as children to MaterialUI component. Can also be used for MenuItems\n         */\n        children: PropTypes.node,\n        /**\n         * Applies a given MaterialUI theme.\n         */\n        theme: PropTypes.object,\n        /**\n         * Forwarded to MaterialUI component.\n         */\n        muiProps: PropTypes.object,\n        /**\n         * label for the Dropdown.\n         */\n        label: PropTypes.string,\n        /**\n         * Selectedvalue of the DropDown.\n         */\n        value: PropTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentValue: props.value\n        }\n    }\n\n    getChildContext() {\n        return {\n            muiTheme: getMuiTheme(this.props.theme)\n        };\n    }\n\n    handleChange (event, index, value) {\n        const oldValue = this.state.currentValue;\n        const newValue = value;\n\n        this.setState({\n            currentValue: newValue\n        });\n        if (this.props.onChange) {\n            this.props.onChange(event, index, oldValue, newValue);\n        }\n    }\n\n    render() {\n        let items = this.props.children;\n        if (this.props.items) {\n            items = this.props.items;\n        }\n\n        const { muiProps, qflProps } = buildTheme({\n            theme: this.props.theme,\n            sourceMuiProps: this.props.muiProps,\n            sourceQflProps: this.props.qflProps,\n            componentName: 'DropDown'\n        });\n\n        return (\n            <div {...qflProps}>\n                <span style={qflProps.labelStyle}>{this.props.label}</span>\n                <MUIDropDownMenu  {...muiProps} value={this.state.currentValue} onChange={(event, index, value) => this.handleChange(event, index, value)} >\n                    {items}\n                </MUIDropDownMenu>\n            </div>\n        );\n    }\n}\n\nDropDown.childContextTypes = {\n    muiTheme: React.PropTypes.object\n};\n\nDropDown.defaultProps = {\n    items: null,\n    theme: 'Default',\n    muiProps: {}\n};\n\nexport default DropDown;\n"]}