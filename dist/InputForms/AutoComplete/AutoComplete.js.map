{"version":3,"sources":["../../../src/InputForms/AutoComplete/AutoComplete.js"],"names":["AutoComplete","props","state","currentValue","value","muiTheme","theme","chosenRequest","index","oldValue","newValue","items","setState","onChange","children","sourceMuiProps","muiProps","sourceQflProps","qflProps","componentName","handleChange","propTypes","array","node","object","label","string","any","childContextTypes","PropTypes","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAEA;;AAEA;;AAEA;;;;AAEA;;;IAGMA,Y;;;AA4BF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,8IACTA,KADS;;AAGf,cAAKC,KAAL,GAAa;AACTC,0BAAc,KAAKF,MAAMG;AADhB,SAAb;AAHe;AAMlB;;;;0CAEiB;AACd,mBAAO;AACHC,0BAAU,yBAAY,KAAKJ,KAAL,CAAWK,KAAvB;AADP,aAAP;AAGH;;;qCAEaC,a,EAAeC,K,EAAO;AAChC,gBAAMC,WAAW,KAAKP,KAAL,CAAWC,YAA5B;AACA,gBAAMO,WAAW,KAAK,KAAKT,KAAL,CAAWU,KAAX,CAAiBH,KAAjB,CAAtB;;AAEA,iBAAKI,QAAL,CAAc;AACVT,8BAAcO;AADJ,aAAd;AAGA,gBAAI,KAAKT,KAAL,CAAWY,QAAf,EAAyB;AACrB,qBAAKZ,KAAL,CAAWY,QAAX,CAAoBN,aAApB,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoDC,QAApD;AACH;AACJ;;;iCAEQ;AAAA;;AACL,gBAAIC,QAAQ,KAAKV,KAAL,CAAWa,QAAvB;AACA,gBAAI,KAAKb,KAAL,CAAWU,KAAf,EAAsB;AAClBA,wBAAQ,KAAKV,KAAL,CAAWU,KAAnB;AACH;;AAJI,8BAM0B,8BAAW;AACtCL,uBAAO,KAAKL,KAAL,CAAWK,KADoB;AAEtCS,gCAAgB,KAAKd,KAAL,CAAWe,QAFW;AAGtCC,gCAAgB,KAAKhB,KAAL,CAAWiB,QAHW;AAItCC,+BAAe;AAJuB,aAAX,CAN1B;AAAA,gBAMGH,QANH,eAMGA,QANH;AAAA,gBAMaE,QANb,eAMaA,QANb;;AAaL,mBACI;AAAA;AAASA,wBAAT;AACI,mGAAsBF,QAAtB,IAAgC,aAAa,IAA7C,EAAmD,YAAYL,KAA/D,EAAsE,YAAY,KAAKT,KAAL,CAAWC,YAA7F,EAA2G,cAAc,sBAACI,aAAD,EAAgBC,KAAhB;AAAA,+BAA0B,OAAKY,YAAL,CAAkBb,aAAlB,EAAiCC,KAAjC,CAA1B;AAAA,qBAAzH;AADJ,aADJ;AAKH;;;4BAvEMa,S,GAAY;AACf;;;AAGAV,WAAO,iBAAUW,KAJF;AAKf;;;AAGAR,cAAU,iBAAUS,IARL;AASf;;;AAGAjB,WAAO,iBAAUkB,MAZF;AAaf;;;AAGAR,cAAU,iBAAUQ,MAhBL;AAiBf;;;AAGAC,WAAO,iBAAUC,MApBF;AAqBf;;;AAGAtB,WAAO,iBAAUuB;AAxBF,C;;;AA0EvB3B,aAAa4B,iBAAb,GAAiC;AAC7BvB,cAAU,gBAAMwB,SAAN,CAAgBL;AADG,CAAjC;;AAIAxB,aAAa8B,YAAb,GAA4B;AACxBnB,WAAO,IADiB;AAExBL,WAAO,SAFiB;AAGxBU,cAAU;AAHc,CAA5B;;kBAMehB,Y","file":"AutoComplete.js","sourcesContent":["import React, { PropTypes, Component } from 'react';\n\nimport { AutoComplete as MUIAutoComplete } from 'material-ui';\n\nimport { buildTheme } from '../../themeBuilder';\n\nimport { getMuiTheme } from 'material-ui/styles';\n\n/**\n * Material UI based drop down menu\n */\nclass AutoComplete extends Component {\n    static propTypes = {\n        /**\n         * Pushed as children to MaterialUI component. Use this for MenuItems\n         */\n        items: PropTypes.array,\n        /**\n         * Pushed as children to MaterialUI component. Can also be used for MenuItems\n         */\n        children: PropTypes.node,\n        /**\n         * Applies a given MaterialUI theme.\n         */\n        theme: PropTypes.object,\n        /**\n         * Forwarded to MaterialUI component.\n         */\n        muiProps: PropTypes.object,\n        /**\n         * label for the Dropdown.\n         */\n        label: PropTypes.string,\n        /**\n         * Selectedvalue of the AutoComplete.\n         */\n        value: PropTypes.any\n    };\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            currentValue: \"\" + props.value\n        }\n    }\n\n    getChildContext() {\n        return {\n            muiTheme: getMuiTheme(this.props.theme)\n        };\n    }\n\n    handleChange (chosenRequest, index) {\n        const oldValue = this.state.currentValue;\n        const newValue = \"\" + this.props.items[index];\n\n        this.setState({\n            currentValue: newValue\n        });\n        if (this.props.onChange) {\n            this.props.onChange(chosenRequest, index, oldValue, newValue);\n        }\n    }\n\n    render() {\n        let items = this.props.children;\n        if (this.props.items) {\n            items = this.props.items;\n        }\n\n        const { muiProps, qflProps } = buildTheme({\n            theme: this.props.theme,\n            sourceMuiProps: this.props.muiProps,\n            sourceQflProps: this.props.qflProps,\n            componentName: 'AutoComplete'\n        });\n\n        return (\n            <div {...qflProps}>\n                <MUIAutoComplete  {...muiProps} openOnFocus={true} dataSource={items} searchText={this.state.currentValue} onNewRequest={(chosenRequest, index) => this.handleChange(chosenRequest, index)} />\n            </div>\n        );\n    }\n}\n\nAutoComplete.childContextTypes = {\n    muiTheme: React.PropTypes.object\n};\n\nAutoComplete.defaultProps = {\n    items: null,\n    theme: 'Default',\n    muiProps: {}\n};\n\nexport default AutoComplete;\n"]}